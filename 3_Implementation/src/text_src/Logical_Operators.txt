									Logical Operators
    Following table shows all the logical operators supported by C language.
    Assume variable A holds 1 and variable B holds 0, then -

  Operator	  Description	
  &&	   Called Logical AND operator. If both the operands are non-zero, then the condition becomes true.	
  ||	   Called Logical OR Operator. If any of the two operands is non-zero, then the condition becomes true.	
  !	       Called Logical NOT Operator. It is used to reverse the logical state of its operand. 
           If a condition is true, then Logical NOT operator will make it false.	
  Example
  (A && B) is false.
  (A || B) is true.  

  !(A && B) is true.

   Try the following example to understand all the logical operators available in C -
 
  #include <stdio.h>

  main() {

   int a = 5;
   int b = 20;
   int c ;

   if ( a && b ) {
      printf("Line 1 - Condition is true\n" );
   }
	
   if ( a || b ) {
      printf("Line 2 - Condition is true\n" );
   }
   
   /* lets change the value of  a and b */
   a = 0;
   b = 10;
	
   if ( a && b ) {
      printf("Line 3 - Condition is true\n" );
   } else {
      printf("Line 3 - Condition is not true\n" );
   }
	
   if ( !(a && b) ) {
      printf("Line 4 - Condition is true\n" );
   }
	
  }

  



